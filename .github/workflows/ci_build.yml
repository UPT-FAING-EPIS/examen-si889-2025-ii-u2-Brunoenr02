name: OrderApp - CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore OrderApp.sln

      - name: Build solution
        run: dotnet build OrderApp.sln --configuration Release --no-restore

      - name: Run unit tests
        run: dotnet test OrderApp.sln --configuration Release --no-build --verbosity normal --logger "console;verbosity=detailed"

      - name: Install coverage tools
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Run tests with coverage
        run: dotnet test OrderApp.sln --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Generate coverage report
        run: |
          reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coveragereport -reporttypes:"Html;MarkdownSummaryGithub;Cobertura"
          mkdir -p Cobertura
          cp coveragereport/SummaryGithub.md Cobertura/SummaryGithub.md
          cat ./coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Publish coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coveragereport
          destination_dir: coverage
          keep_files: true

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coveragereport
